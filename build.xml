<project name="com.darwinsys.* package" default="regress" basedir=".">

	<!-- $Id$ -->

	<!-- dependancies -->
	<property file="../build.properties"/>

	<!-- other properties -->
	<property name="src" value="src"/>
	<property name="build" value="build"/>

	<property name="obj.jar" value="com-darwinsys-all.jar"/>
	<property name="src.jar" value="com-darwinsys-all-src.jar"/>

	<property name="deploy.dir" value="${user.home}/classes/ext"/>

	<target name="init">
		<tstamp/> <!-- Set time stamp variables in case we need 'em-->
		<mkdir dir="${build}"/> <!-- Ensure build directory exists -->
	</target>

	<target name="build" depends="init">
		<javac srcdir="${src}" destdir="${build}"
			classpath="${servletapi.jar}:${mail.jar}:${activation.jar}"
			deprecation="true" fork="false"
			/>
		<echo message="You must run 'ant jar' to update the Docs and Jar"/>
	</target>

	<target name="dist" depends="jar,src-jar"/>

	<target name="jar" depends="docs">
		<jar jarfile="${build}/${obj.jar}" 
			manifest="manifest.stub"
			basedir="${build}" includes="META-INF/*,com/**/*.class,docs">
		</jar>
	</target>

	<target name="src-jar" depends="docs">
		<jar jarfile="${build}/${src.jar}"
			manifest="manifest.stub"
			basedir="." includes="build.xml,src/**">
		</jar>
	</target>

	<target name="deploy" depends="jar">
		<copy file="${build}/${obj.jar}" todir="${deploy.dir}"/>
	</target>

	<target name="docs" depends="build">
		<javadoc sourcepath="${src}" destdir="${build}/docs/api"
			packagenames="com.darwinsys.*"
			maxmemory="32m" 
			windowtitle="com.darwinsys.* - Java Cookbook Utilities"
			Version="true" Author="true" Use="true"
			Overview="overview.html"
			>
			<packageset dir="${src}" defaultexcludes="yes">
				<include name="com/darwinsys/**" />
				<exclude name="regress/**"/>
			</packageset>
			<bottom><![CDATA[<i>Copyright &#169; 2000-2003 Ian F. Darwin. See <a href="http://javacook.darwinsys.com/license.html">license.html</a> for usage license.</i>]]></bottom>
		</javadoc>
		<copy file="html/index.html" todir="${build}/docs"/>
	</target>

	<target name="install-docs" depends="docs">
	<!-- jsch scp is not reliable, it always locks up on this scp.
		<input
			message="Please enter ssh password:"
			addproperty="ssh.password"
			/>
		<exec executable="clear"/>
		<scp todir="ian@www.darwinsys.com:/www/javacook/docs"
			password="${ssh.password}">
			<fileset dir="${build}/docs"/>
		</scp>
	-->
		<exec executable="/usr/bin/scp">
			<arg value="-r"/>
			<arg value="${build}/docs"/>
			<arg value="ian@www.darwinsys.com:/www/javacook/"/>
		</exec>
	</target>

	<!-- Don't change this w/o changing FileIOTest.java -->
	<property name="${fileiotest.dat}" value="fileiotest.dat"/>

	<!-- Simple Regression Tests -->
	<!-- Some are pretty lame, re-do ALL with JUnit -->
	<target name="regress" depends="build">
		<!-- Tests using JUnit -->
		<!-- Don't change this w/o changing FileIOTest.java -->
		<echo file="${fileiotest.dat}" message="This is a one-line file."/>
		<junit printsummary="yes" fork="no" haltonfailure="yes">
				<classpath>
						<pathelement location="${build}"/>
						<pathelement location="${junit.jar}"/>
				</classpath>
				<formatter type="plain"/>
				<test name="regress.ArrayIteratorTest"/>
				<test name="regress.FileIOTest"/>
				<test name="regress.IndexListTest"/>
				<test name="regress.StringFormatTest"/>
				<test name="regress.StringUtilTest"/>
		</junit>
		<!-- FileIOTest copies its $av[0] to $av[0].bak; check w/ checksum -->
		<property name="file" value="${build}/com/darwinsys/io/FileIO.class"/>
		<java className="regress.FileIOTest" classpath="build">
			<arg value="${file}"/>
			</java>
			<checksum file="${file}" property="sum"/>
			<checksum file="${file}.bak" property="${sum}"
				verifyProperty="isEqual"/>

		<!-- Test GetOpt -->
		<java className="regress.GetOptTest" classpath="build"/>


	</target>

	<!-- These regressions require manual intervention, so not default -->
	<target name="regress.swingui" depends="build">
		<echo           message="ErrorUtilCatchTest"/>
		<java className="regress.ErrorUtilCatchTest" classpath="build"
			fork="yes"/>
		<echo           message="ErrorUtilTest"/>
		<java className="regress.ErrorUtilTest" classpath="build"
			fork="yes"/>
		<echo           message="ArrayListTableSimple"/>
		<java className="regress.ArrayListTableSimple" classpath="build"
			fork="yes"/>
		<echo           message="LabelTextTest"/>
		<java className="regress.LabelTextTest" classpath="build"
			fork="yes"/>
		<echo           message="SimpleHelpTest"/>
		<java className="regress.SimpleHelpTest" classpath="build"
			fork="yes">
			<arg value="../otherlang/help/index.html"/>
			</java>
		<echo           message="WindowCloserTest (deprecated)"/>
		<java className="regress.WindowCloserTest" classpath="build"
			fork="yes"/>
	</target>

	<target name="regress.layout" depends="build">
		<echo           message="CircleLayoutTest"/>
		<java className="regress.CircleLayoutTest" classpath="build"
			fork="yes"/>
		<echo           message="ColumnLayoutTest"/>
		<java className="regress.ColumnLayoutTest" classpath="build"
			fork="yes"/>
		<echo           message="RelativeLayoutTest"/>
		<java className="regress.RelativeLayoutTest" classpath="build"
			fork="yes"/>
		<echo           message="TabLayoutTest"/>
		<java className="regress.TabLayoutTest" classpath="build"
			fork="yes"/>
	</target>

	<target name="clean">
		<delete file="${fileiotest.dat}"/>
		<delete file="${fileiotest.dat}.bak"/>
		<delete dir="build"/>
		<delete dir="docs"/>
	</target>
</project>
